    //@formatter:off
    StringBuilder sb = new StringBuilder();
    sb.append("public class c_file_reader {                                                  //001 \n");
    sb.append("  private final array<char>buffer;                                            //002 \n");
    sb.append("  private final int size;                                                     //003 \n");
    sb.append("  private int offset;                                                         //004 \n");
    sb.append("  private int line;                                                           //005 \n");
    sb.append("  private int column;                                                         //006 \n");
    sb.append("  private char prevc;                                                         //007 \n");
    sb.append("  private int eofs;                                                           //008 \n");
    sb.append("  public c_file_reader(final string input) {                                  //009 \n");
    sb.append("    this.buffer = new array<char>();                                          //010 \n");
    sb.append("    this.size = input.size() + 8;                                             //011 \n");
    sb.append("    this.offset = 0;                                                          //012 \n");
    sb.append("    this.line = 1;                                                            //013 \n");
    sb.append("    this.column = 0;                                                          //014 \n");
    sb.append("    this.prevc = \'\\0\';                                                     //015 \n");
    sb.append("    this.eofs = -1;                                                           //016 \n");
    sb.append("    fill_buffer(input);                                                       //017 \n");
    sb.append("  }                                                                           //018 \n");
    sb.append("  void fill_buffer(string input) {                                            //019 \n");
    sb.append("    for (int i = 0; i < input.size(); i += 1) {                               //020 \n");
    sb.append("      char c = input.get(i);                                                  //021 \n");
    sb.append("      buffer.add(c);                                                          //022 \n");
    sb.append("    }                                                                         //023 \n");
    sb.append("    for (int i = 0; i < 8; i += 1) {                                          //024 \n");
    sb.append("      buffer.add(\'\\0\');                                                    //025 \n");
    sb.append("    }                                                                         //026 \n");
    sb.append("  }                                                                           //027 \n");
    sb.append("  public boolean isEof() {                                                    //028 \n");
    sb.append("    return eofs >= 8;                                                         //029 \n");
    sb.append("  }                                                                           //030 \n");
    sb.append("  public char peekc() {                                                       //031 \n");
    sb.append("    // don\'t be too smart ;)                                                 //032 \n");
    sb.append("    int save_offset = offset;                                                 //033 \n");
    sb.append("    int save_line = line;                                                     //034 \n");
    sb.append("    int save_column = column;                                                 //035 \n");
    sb.append("    char save_prevc = prevc;                                                  //036 \n");
    sb.append("    int save_eofs = eofs;                                                     //037 \n");
    sb.append("    char c = nextc();                                                         //038 \n");
    sb.append("    offset = save_offset;                                                     //039 \n");
    sb.append("    line = save_line;                                                         //040 \n");
    sb.append("    column = save_column;                                                     //041 \n");
    sb.append("    prevc = save_prevc;                                                       //042 \n");
    sb.append("    eofs = save_eofs;                                                         //043 \n");
    sb.append("    return c;                                                                 //044 \n");
    sb.append("  }                                                                           //045 \n");
    sb.append("  public array<char> peekc3() {                                               //046 \n");
    sb.append("    array<char> res = new array<char>();                                      //047 \n");
    sb.append("    // don\'t be too smart ;)                                                 //048 \n");
    sb.append("    int save_offset = offset;                                                 //049 \n");
    sb.append("    int save_line = line;                                                     //050 \n");
    sb.append("    int save_column = column;                                                 //051 \n");
    sb.append("    char save_prevc = prevc;                                                  //052 \n");
    sb.append("    int save_eofs = eofs;                                                     //053 \n");
    sb.append("    res.add(nextc());                                                         //054 \n");
    sb.append("    res.add(nextc());                                                         //055 \n");
    sb.append("    res.add(nextc());                                                         //056 \n");
    sb.append("    offset = save_offset;                                                     //057 \n");
    sb.append("    line = save_line;                                                         //058 \n");
    sb.append("    column = save_column;                                                     //059 \n");
    sb.append("    prevc = save_prevc;                                                       //060 \n");
    sb.append("    eofs = save_eofs;                                                         //061 \n");
    sb.append("    return res;                                                               //062 \n");
    sb.append("  }                                                                           //063 \n");
    sb.append("  public char nextc() {                                                       //064 \n");
    sb.append("    while (!isEof()) {                                                        //065 \n");
    sb.append("      if (eofs > 8) {                                                         //066 \n");
    sb.append("        //throw new RuntimeException(\"Infinite loop handling...\");          //067 \n");
    sb.append("      }                                                                       //068 \n");
    sb.append("      if (prevc == \'\\n\') {                                                 //069 \n");
    sb.append("        line += 1;                                                            //070 \n");
    sb.append("        column = 0;                                                           //071 \n");
    sb.append("      }                                                                       //072 \n");
    sb.append("      if (buffer.get(offset) == \'\\\\\') {                                   //073 \n");
    sb.append("        if (buffer.get(offset + 1) == \'\\r\') {                              //074 \n");
    sb.append("          if (buffer.get(offset + 2) == \'\\n\') {                            //075 \n");
    sb.append("            // DOS: [\\][\\r][\\n]                                            //076 \n");
    sb.append("            offset += 3;                                                      //077 \n");
    sb.append("          } else {                                                            //078 \n");
    sb.append("            // OSX: [\\][\\r]                                                 //079 \n");
    sb.append("            offset += 2;                                                      //080 \n");
    sb.append("          }                                                                   //081 \n");
    sb.append("          prevc = \'\\n\';                                                    //082 \n");
    sb.append("          continue;                                                           //083 \n");
    sb.append("        }                                                                     //084 \n");
    sb.append("        // UNX: [\\][\\n]                                                     //085 \n");
    sb.append("        if (buffer.get(offset + 1) == \'\\n\') {                              //086 \n");
    sb.append("          offset += 2;                                                        //087 \n");
    sb.append("          prevc = \'\\n\';                                                    //088 \n");
    sb.append("          continue;                                                           //089 \n");
    sb.append("        }                                                                     //090 \n");
    sb.append("      }                                                                       //091 \n");
    sb.append("      if (buffer.get(offset) == \'\\r\') {                                    //092 \n");
    sb.append("        if (buffer.get(offset + 1) == \'\\n\') {                              //093 \n");
    sb.append("          // DOS: [\\r][\\n]                                                  //094 \n");
    sb.append("          offset += 2;                                                        //095 \n");
    sb.append("        } else {                                                              //096 \n");
    sb.append("          // OSX: [\\r]                                                       //097 \n");
    sb.append("          offset += 1;                                                        //098 \n");
    sb.append("        }                                                                     //099 \n");
    sb.append("        prevc = \'\\n\';                                                      //100 \n");
    sb.append("        return \'\\n\';                                                       //101 \n");
    sb.append("      }                                                                       //102 \n");
    sb.append("      if (offset == size) {                                                   //103 \n");
    sb.append("        eofs += 1;                                                            //104 \n");
    sb.append("        return \'\\0\';                                                       //105 \n");
    sb.append("      }                                                                       //106 \n");
    sb.append("      char next = buffer.get(offset);                                         //107 \n");
    sb.append("      offset += 1;                                                            //108 \n");
    sb.append("      column += 1;                                                            //109 \n");
    sb.append("      prevc = next;                                                           //110 \n");
    sb.append("      if (next == \'\\0\') {                                                  //111 \n");
    sb.append("        eofs += 1;                                                            //112 \n");
    sb.append("        return \'\\0\';                                                       //113 \n");
    sb.append("      }                                                                       //114 \n");
    sb.append("      return next;                                                            //115 \n");
    sb.append("    }                                                                         //116 \n");
    sb.append("    return \'\\0\';                                                           //117 \n");
    sb.append("  }                                                                           //118 \n");
    sb.append("}                                                                             //119 \n");
    sb.append("class main_class                                                              //120 \n");
    sb.append("{                                                                             //121 \n");
    sb.append("  int main() {                                                                //122 \n");
    sb.append("    c_file_reader reader = new c_file_reader(\"int main() { return 0; }\");   //123 \n");
    sb.append("    while(!reader.isEof()) {                                                  //124 \n");
    sb.append("      char c = reader.nextc();                                                //125 \n");
    sb.append("      std.print(\"%c\", c);                                                   //126 \n");
    sb.append("    }                                                                         //127 \n");
    sb.append("    return 0;                                                                 //128 \n");
    sb.append("  }                                                                           //129 \n");
    sb.append("}                                                                             //130 \n");
    //@formatter:on
