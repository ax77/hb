
class ArrayList<T> 
{
	private final builtin.array_declare<T> table;
	
	void add(T element) {
	  builtin.array_add<T>(table, element);
	}
	
  // func get_iterator() -> array_iterator<T>
  // {
  //   return new array_iterator<T>();
  // }
	
	// func push_back(element: T) 
	// {
	//   builtin.array_add(type: T, array: table);
	// }
	// 
	// func get_size() -> u64
	// {
	//   return builtin.array_size(type: T, array: table);
	// }
	// 
	// func get(at: u64) -> T 
	// {
	//   return builtin.array_get(type: T, array: table, index: at);
	// }
	// 
	// func set(at: u64, element: T)
	// {
	//   builtin.array_set(type: T, array: table, index: at, element: element);
	// }
	// 
	// func insert(at: u64, element: T) 
	// {
	//   builtin.array_insert(type: T, array: table, index: at, element: element);
	// }
	
}

// class array_iterator<T>
// {
//   let collection: array<T>;
//   var offset: u64;
//   
//   func has_next() -> boolean
//   {
//     return offset < collection.get_size();
//   }
//   
//   func get_next() -> T
//   {
//     let item: T = collection.get(at: offset);
//     offset += 1_u64;
//     return item;
//   }
// }
