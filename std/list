import std.node;
import std.list_iterator;

class list<T>
{
    var first: node<T>;
    var last: node<T>;
    var size: i32;
    
    func push_back(e: T)
    {
        var l: node<T> = self.last;
        var n: node<T> = new node<T>(
            prev: l,
            item: e,
            next: null
        );
        self.last = n;
        if (l == null) {
            self.first = n;
        } else {
            l.next = n;
        }
        self.size += 1;
    }
    
    func get_iterator() -> list_iterator<T>
    {
        return new list_iterator<T>(
            collection: self
        );
    }
}

